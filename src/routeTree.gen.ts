/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as MainLayoutImport } from './routes/_mainLayout'
import { Route as IndexImport } from './routes/index'
import { Route as MainLayoutMyDocumentsImport } from './routes/_mainLayout/my-documents'
import { Route as MainLayoutKnowledgeBaseImport } from './routes/_mainLayout/knowledge-base'
import { Route as MainLayoutAnalyzeIndexImport } from './routes/_mainLayout/analyze.index'
import { Route as MainLayoutAnalyzeIdImport } from './routes/_mainLayout/analyze.$id'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutMyDocumentsRoute = MainLayoutMyDocumentsImport.update({
  id: '/my-documents',
  path: '/my-documents',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutKnowledgeBaseRoute = MainLayoutKnowledgeBaseImport.update({
  id: '/knowledge-base',
  path: '/knowledge-base',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutAnalyzeIndexRoute = MainLayoutAnalyzeIndexImport.update({
  id: '/analyze/',
  path: '/analyze/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutAnalyzeIdRoute = MainLayoutAnalyzeIdImport.update({
  id: '/analyze/$id',
  path: '/analyze/$id',
  getParentRoute: () => MainLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout/knowledge-base': {
      id: '/_mainLayout/knowledge-base'
      path: '/knowledge-base'
      fullPath: '/knowledge-base'
      preLoaderRoute: typeof MainLayoutKnowledgeBaseImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/my-documents': {
      id: '/_mainLayout/my-documents'
      path: '/my-documents'
      fullPath: '/my-documents'
      preLoaderRoute: typeof MainLayoutMyDocumentsImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/analyze/$id': {
      id: '/_mainLayout/analyze/$id'
      path: '/analyze/$id'
      fullPath: '/analyze/$id'
      preLoaderRoute: typeof MainLayoutAnalyzeIdImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/analyze/': {
      id: '/_mainLayout/analyze/'
      path: '/analyze'
      fullPath: '/analyze'
      preLoaderRoute: typeof MainLayoutAnalyzeIndexImport
      parentRoute: typeof MainLayoutImport
    }
  }
}

// Create and export the route tree

interface MainLayoutRouteChildren {
  MainLayoutKnowledgeBaseRoute: typeof MainLayoutKnowledgeBaseRoute
  MainLayoutMyDocumentsRoute: typeof MainLayoutMyDocumentsRoute
  MainLayoutAnalyzeIdRoute: typeof MainLayoutAnalyzeIdRoute
  MainLayoutAnalyzeIndexRoute: typeof MainLayoutAnalyzeIndexRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutKnowledgeBaseRoute: MainLayoutKnowledgeBaseRoute,
  MainLayoutMyDocumentsRoute: MainLayoutMyDocumentsRoute,
  MainLayoutAnalyzeIdRoute: MainLayoutAnalyzeIdRoute,
  MainLayoutAnalyzeIndexRoute: MainLayoutAnalyzeIndexRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MainLayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/knowledge-base': typeof MainLayoutKnowledgeBaseRoute
  '/my-documents': typeof MainLayoutMyDocumentsRoute
  '/analyze/$id': typeof MainLayoutAnalyzeIdRoute
  '/analyze': typeof MainLayoutAnalyzeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MainLayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/knowledge-base': typeof MainLayoutKnowledgeBaseRoute
  '/my-documents': typeof MainLayoutMyDocumentsRoute
  '/analyze/$id': typeof MainLayoutAnalyzeIdRoute
  '/analyze': typeof MainLayoutAnalyzeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/_mainLayout/knowledge-base': typeof MainLayoutKnowledgeBaseRoute
  '/_mainLayout/my-documents': typeof MainLayoutMyDocumentsRoute
  '/_mainLayout/analyze/$id': typeof MainLayoutAnalyzeIdRoute
  '/_mainLayout/analyze/': typeof MainLayoutAnalyzeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth'
    | '/knowledge-base'
    | '/my-documents'
    | '/analyze/$id'
    | '/analyze'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth'
    | '/knowledge-base'
    | '/my-documents'
    | '/analyze/$id'
    | '/analyze'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/auth'
    | '/_mainLayout/knowledge-base'
    | '/_mainLayout/my-documents'
    | '/_mainLayout/analyze/$id'
    | '/_mainLayout/analyze/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  AuthRoute: typeof AuthRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRoute: MainLayoutRouteWithChildren,
  AuthRoute: AuthRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_mainLayout",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_mainLayout": {
      "filePath": "_mainLayout.tsx",
      "children": [
        "/_mainLayout/knowledge-base",
        "/_mainLayout/my-documents",
        "/_mainLayout/analyze/$id",
        "/_mainLayout/analyze/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/_mainLayout/knowledge-base": {
      "filePath": "_mainLayout/knowledge-base.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/my-documents": {
      "filePath": "_mainLayout/my-documents.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/analyze/$id": {
      "filePath": "_mainLayout/analyze.$id.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/analyze/": {
      "filePath": "_mainLayout/analyze.index.tsx",
      "parent": "/_mainLayout"
    }
  }
}
ROUTE_MANIFEST_END */
